#!/usr/bin/env python3
# This file is subject to GPLv3 license. See file COPYING for license details.
# Copyright 2018 woky

import argparse
import sys, fileinput, csv
import datetime as dt
import dateutil.tz as dutz
from common import *

parser = argparse.ArgumentParser()
parser.add_argument('--silence-warnings', '-W', action='store_true')
parser.add_argument('--quiet',            '-q', action='count', default=0)
parser.add_argument('files', nargs='*')
args = parser.parse_args()

ret = 0

with open_default_db() as d, fileinput.input(args.files) as input:
    reader = csv.reader(input)
    next(reader, None)
    imported = []
    num_read = 0
    num_imported = 0
    num_dups = 0
    for row in reader:
        if not row:
            continue
        num_read += 1
        client, project, _, _, start_txt, end_txt, tz_txt, *_ = row
        tz    = dutz.gettz(tz_txt)
        start = dt.datetime.fromisoformat(start_txt).astimezone(tz)
        end   = dt.datetime.fromisoformat(end_txt).astimezone(tz)
        entry = Entry(client, project, start, end)
        try:
            entry = d.add_entry(entry, add_project=True)
            num_imported += 1
            if args.quiet < 1:
                imported.append(entry)
        except OverlappingEntryError as e:
            if e.is_duplicate():
                num_dups += 1
            elif not args.silence_warnings:
                print('WARNING', e, file=sys.stderr)
                e.print_overlapping_entries()
                print(file=sys.stderr)
            ret = 1

    if args.quiet < 2:
        num_err = num_read - num_imported - num_dups
        print('    Errors: {:5} / {}'.format(num_err, num_read))
        print('Duplicates: {:5} / {}'.format(num_dups, num_read))
        print('  Imported: {:5} / {}'.format(num_imported, num_read))
        if args.quiet < 1 and num_imported:
            print_entries(imported, file=sys.stdout)

sys.exit(ret)
